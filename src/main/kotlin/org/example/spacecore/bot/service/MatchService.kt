package org.example.spacecore.bot.service

import org.example.spacecore.bot.model.Profile
import org.springframework.stereotype.Service
import org.telegram.telegrambots.meta.api.methods.send.SendMessage
import org.telegram.telegrambots.meta.api.objects.User
import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardRow

@Service
class MatchService(
    private val profileService: ProfileService
) {

    fun createLikeNotification(likerProfile: Profile, likedUserTelegramId: Long): List<SendMessage> {
        val messageText = """
            ‚ù§Ô∏è –í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é!
            
            –ò–º—è: ${likerProfile.name}
            –í–æ–∑—Ä–∞—Å—Ç: ${likerProfile.age}
            –û–ø–∏—Å–∞–Ω–∏–µ: ${likerProfile.description}
            –í–∞–π–±: ${likerProfile.vibe.value}
        """.trimIndent()

        val keyboard = listOf(
            InlineKeyboardRow(
                InlineKeyboardButton("‚ù§Ô∏è –í–∑–∞–∏–º–Ω–∞—è —Å–∏–º–ø–∞—Ç–∏—è").apply {
                    callbackData = "match_${likerProfile.telegramId}"
                }
            )
        )
        val message = SendMessage(likedUserTelegramId.toString(), messageText).apply {
            replyMarkup = InlineKeyboardMarkup.builder().keyboard(keyboard).build()
        }

        val myMessageText = """
            ‚ù§Ô∏è –í–∞—à–∞ —Å–∏–º–ø–∞—Ç–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!
        """.trimIndent()
        val myMessage = SendMessage(likerProfile.telegramId.toString(), myMessageText)

        return listOf(message, myMessage)
    }

    fun createMatchNotification(user1Id: Long, user2Id: Long): List<SendMessage> {
        val user1Profile = profileService.getOrCreateProfile(
            User(user1Id, "User1", false).apply {
                firstName = "User1"
            }
        )

        val user2Profile = profileService.getOrCreateProfile(
            User(user2Id, "User2", false).apply {
                firstName = "User2"
            }
        )

        val messageToUser1 = """
            üéâ –í–∑–∞–∏–º–Ω–∞—è —Å–∏–º–ø–∞—Ç–∏—è!
            
            –í—ã –ø–æ–Ω—Ä–∞–≤–∏–ª–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @${user2Profile.username ?: "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"}!
            –•–æ—Ä–æ—à–æ –≤–∞–º –ø–æ–æ–±—â–∞—Ç—å—Å—è!
        """.trimIndent()

        val messageToUser2 = """
            üéâ –í–∑–∞–∏–º–Ω–∞—è —Å–∏–º–ø–∞—Ç–∏—è!
            
            –í—ã –ø–æ–Ω—Ä–∞–≤–∏–ª–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @${user1Profile.username ?: "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"}!
            –•–æ—Ä–æ—à–æ –≤–∞–º –ø–æ–æ–±—â–∞—Ç—å—Å—è!
        """.trimIndent()

        return listOf(
            SendMessage(user1Id.toString(), messageToUser1),
            SendMessage(user2Id.toString(), messageToUser2)
        )
    }
}